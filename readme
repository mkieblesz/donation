COMMANDS:
1. Dev setup.

    python3.8 -m venv .venv
    source .venv/bin/activate
    pip install -U pip setuptools
    pip install -r requirements.txt

2. Development.

    rm db.sqlite3
    source .venv/bin/activate
    python manage.py migrate
    python manage.py shell < fixtures/users.py
    python manage.py shell < fixtures/veg_out_pledge.py
    python manage.py shell < fixtures/clean_your_bills_pledge.py
    python manage.py runserver

3. Testing.

    flake8 apps donation
    pytest --cov

4. Formatting.

    black -S -l 100 -t py38 <file or folder path>
    isort -rc -c <file or folder path>

NOTES:
1. Testing - pytest as a better test runner than default runner
    - `assert <test>` prints out detailed error message so no need to use named assert functions
    - more flexible fixture framework; we can pass fixtures by name as function parameter
    - pytest-cov plugin which prints out easy to read coverage summary after each test run
2. Development.
    - ipdb for more versitile debugging solution than vscode/pycharm editor debuggers
    - pip-check for checking if new versions of requirements were released
3. Auto-formatting.
    - black and isort was used to automaticall enforce python files format rules
    - the point is to not make devs split hairs about styleguide
    - the rule is if it's autoformatted it's correct; all edge cases should be in-line ignored
4. Editor compability - VsCode config included.
    - ctrl+u for auto-formatting current python file
    - ctrl+i for sorting imports in current file and removing duplicates
    - ctrl+mouseclick for going to definition of python symbol
    - alt+-/alt+shift+- for previous/next cursor mouseclick position
    - alt+shift+mouseclick for visual block select, with cursor at the end each included line
    - ctrl+d for adding new cursor to the next selection occurance
    - ctrl+j for joining lines
5. TODO.
    - use postgres
    - store answers in json field in Pledge table to simplify schema, queries and code
    - store selectable formula values in json field in Question table to simplify schema
    - split requirements to prod, test and dev
    - consider refactoring structure to single, monolithic app - move pledges to donation folder
    - validate action formula text formats
    - require answers for all questions of the pledge to be provided before creating a pledge
